# Generated by Django 4.1.2 on 2022-11-26 20:29

from django.db import migrations, models
import django.db.models.deletion
import sortedm2m.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="EligibilityCriterion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=128)),
                ("description", models.TextField()),
                ("icon", models.CharField(max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name="Episode",
            fields=[
                (
                    "name_short",
                    models.SlugField(max_length=16, primary_key=True, serialize=False),
                ),
                ("name_long", models.CharField(max_length=128)),
                ("blurb", models.TextField(blank=True)),
                ("registration", models.DateTimeField()),
                ("game_release", models.DateTimeField()),
                ("game_archive", models.DateTimeField()),
                ("submission_frozen", models.BooleanField(default=True)),
                (
                    "autoscrim_schedule",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[("java8", "Java 8"), ("py3", "Python 3")], max_length=8
                    ),
                ),
                ("release_version", models.CharField(blank=True, max_length=32)),
                (
                    "pass_requirement_win",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "pass_requirement_out_of",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "eligibility_criteria",
                    models.ManyToManyField(
                        blank=True,
                        related_name="episodes",
                        to="episodes.eligibilitycriterion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Map",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.SlugField(max_length=24)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "episode",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="maps",
                        to="episodes.episode",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tournament",
            fields=[
                (
                    "name_short",
                    models.SlugField(max_length=32, primary_key=True, serialize=False),
                ),
                ("name_long", models.CharField(max_length=128)),
                ("blurb", models.TextField(blank=True)),
                (
                    "style",
                    models.CharField(
                        choices=[
                            ("SE", "Single Elimination"),
                            ("DE", "Double Elimination"),
                        ],
                        max_length=2,
                    ),
                ),
                ("require_resume", models.BooleanField()),
                ("is_public", models.BooleanField()),
                ("submission_freeze", models.DateTimeField()),
                ("submission_unfreeze", models.DateTimeField()),
                ("in_progress", models.BooleanField(default=False)),
                ("challonge_private", models.URLField(blank=True, null=True)),
                ("challonge_public", models.URLField(blank=True, null=True)),
                (
                    "eligibility_excludes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="exclude_tournaments",
                        to="episodes.eligibilitycriterion",
                    ),
                ),
                (
                    "eligibility_includes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="include_tournaments",
                        to="episodes.eligibilitycriterion",
                    ),
                ),
                (
                    "episode",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="tournaments",
                        to="episodes.episode",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TournamentRound",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("challonge_id", models.SmallIntegerField(blank=True, null=True)),
                ("name", models.CharField(max_length=64)),
                (
                    "release_status",
                    models.IntegerField(
                        choices=[(0, "Hidden"), (1, "Participants"), (2, "Results")],
                        default=0,
                    ),
                ),
                (
                    "maps",
                    sortedm2m.fields.SortedManyToManyField(
                        blank=True,
                        help_text=None,
                        related_name="tournament_rounds",
                        to="episodes.map",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="rounds",
                        to="episodes.tournament",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="tournamentround",
            constraint=models.UniqueConstraint(
                fields=("tournament", "challonge_id"),
                name="round-unique-tournament-challonge",
            ),
        ),
        migrations.AddConstraint(
            model_name="map",
            constraint=models.UniqueConstraint(
                fields=("episode", "name"), name="map-unique-episode-name"
            ),
        ),
    ]
