/* Food for thought:
You could consider splitting these up into css files for each file.
For example, the countdown-specific css could go in `countdown.css`.
This would make the CSS more easy to understand.
But it's not really beneficial in the long run,
unless the CSS is being heavily edited
(eg in a redesign)
See #79 */

body {
  background-color: #96acb746;
}

a {
  color: #0891b2;
}

a:hover {
  color: #155e75;
}

.btn {
  background-color: #155e75 !important;
  border-color: #155e75 !important;
  color: rgb(230, 230, 230);
}

.btn:hover {
  background-color: #083344 !important;
  border-color: #083344 !important;
}

/* a centered row of things used in team page for checkboxes */
.center-row {
  display: flex;
  justify-content: flex-start;
  align-items: center;
}

h5 {
  font-weight: bold;
}

.center-row-start {
  width: auto;
  /* these have to be important because bootstrap's js means its margin styles will always take precedence */
  margin-top: 0px !important;
  margin-right: 5px !important;
}

/* used to display little user icons on team page */
.small-user-list {
  display: flex;
  justify-content: flex-start;
  padding-top: 10px;
  padding-left: 20px;
}

.small-user-list .avatar {
  width: 20px;
  height: 20px;
  margin-bottom: 0px;
}

.small-user-list .border-gray {
  border-width: 2px;
}

/* flex box to display elements in a row with spacing, used in team card */
.row-items-box {
  display: flex;
  flex-direction: column;
  justify-content: left;
}

.row-items-box > * {
  margin-right: 15px;
}

.items-box-skinny > * {
  margin-right: 10px;
}

.row-items-box > *:last-child {
  margin-right: 0px;
}

.items-box-center {
  align-items: center;
}

.items-box-center > * {
  margin-top: 0px !important;
  margin-bottom: 0px !important;
}

.installation-steps {
  margin-top: 7px !important;
  margin-bottom: 7px !important;
  font-size: 14px !important;
}

.selected-ide-button {
  background-color: #9a6d4c !important;
  color: white !important;
}
.ide-button-getting-started {
  font-size: 0.9em !important;
  padding-top: 4px !important;
  padding-bottom: 4px !important;
}

/* a container that displays its children as a centered column in desktop site
   and as a single row in mobile site
   margins need to be important because otherwise bootstrap will override */
.col-2-row {
  display: flex;

  flex-direction: row;
  align-items: center;

  justify-content: center;
}

.col-2-row > * {
  margin: 0px 19px 0px 0px !important;
}

.col-2-row-skinny > * {
  margin: 0px 10px 0px 0px !important;
}

.col-2-row > *:last-child {
  margin: 0px !important;
}

::selection {
  /* Match the color in our sidebar, for aesthetic */
  background: #cfe1b9;
  /* color: white */
  /* Toggle text color depending on whether background is light or dark */
}

ul:not(.nav),
ol {
  /* Styled the same as <p/> from Bootstrap
  Allows our ul and ol to look like p,
  without having to be nested in a p (which is illegal) */
  font-size: 15px;
  line-height: 1.5;
}

/* Styled h5's. Legacy code not in use anymore, kept around cuz it might be handy. */
/* .h5-bold {
  font-weight: bold;
  font-size: 1.3em;
}

.h5-ul {
  text-decoration: underline;
  font-size: 1.2em;
} */

@media (min-width: 992px) {
  .col-2-row {
    flex-direction: column;
  }

  .col-2-row > * {
    margin: 0px 0px 15px 0px !important;
  }

  .col-2-row > *:last-child {
    margin: 0px !important;
  }
}

/* For the countdown display in `countdown.js` and the main page */
.Countdown {
  margin: 10px auto;
  padding-bottom: 20px;
}

.Countdown-col {
  display: inline-block;
}

.Countdown-col-element {
  display: inline-block;
  margin: 0 20px;
  display: flex;
  flex-direction: column;
}

.Countdown-col-element strong {
  font-size: 2em;
}

.countdown-container {
  text-align: center;
}

/* Based on https://www.w3schools.com/howto/howto_css_loader.asp */
.spinner {
  border: 8px solid #f3f3f3; /* Light grey */
  border-top: 8px solid #3498db; /* Blue */
  border-radius: 50%;
  width: 60px;
  height: 60px;
  animation: spin 2s linear infinite;
  margin: auto;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.sidebar .logo p {
  font-family: "Josefin Sans", sans-serif;
}

.alert {
  z-index: 1030;
}

.error-message {
  white-space: pre-line;
}

.pagination-control {
  margin: auto;
  width: fit-content;
}

/* Use regular bootstrap CSS for alerts, because the light bootstrap CSS
   is quite bright. */
.alert {
  padding: 15px;
  margin-bottom: 20px;
  border: 1px solid transparent;
  border-radius: 4px;
}
.alert h4 {
  margin-top: 0;
  color: inherit;
}
.alert .alert-link {
  font-weight: 700;
}
.alert > p,
.alert > ul {
  margin-bottom: 0;
}
.alert > p + p {
  margin-top: 5px;
}
.alert-dismissable,
.alert-dismissible {
  padding-right: 35px;
}
.alert-dismissable .close,
.alert-dismissible .close {
  position: relative;
  top: -2px;
  right: -21px;
  color: inherit;
}
.alert-success {
  color: #3c763d;
  background-color: #dff0d8;
  border-color: #d6e9c6;
}
.alert-success hr {
  border-top-color: #c9e2b3;
}
.alert-success .alert-link {
  color: #2b542c;
}
.alert-info {
  color: #31708f;
  background-color: #d9edf7;
  border-color: #bce8f1;
}
.alert-info hr {
  border-top-color: #a6e1ec;
}
.alert-info .alert-link {
  color: #245269;
}
.alert-warning {
  color: #8a6d3b;
  background-color: #fcf8e3;
  border-color: #faebcc;
}
.alert-warning hr {
  border-top-color: #f7e1b5;
}
.alert-warning .alert-link {
  color: #66512c;
}
.alert-danger {
  color: #a94442;
  background-color: #f2dede;
  border-color: #ebccd1;
}
.alert-danger hr {
  border-top-color: #e4b9c0;
}
.alert-danger .alert-link {
  color: #843534;
}
