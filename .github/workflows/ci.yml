name: CI
on: push
defaults:
  run:
    shell: bash -l {0}

jobs:
  lint:
    name: Linter (pre-commit)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2.4.0
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v0.8.0
        with:
          create_credentials_file: true
          workload_identity_provider: projects/830784087321/locations/global/workloadIdentityPools/galaxy-ci/providers/github-ci-main
          service_account: github-ci-agent@mitbattlecode.iam.gserviceaccount.com
      - name: Cache conda
        uses: actions/cache@v3.0.11
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment-dev.yml') }}
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          environment-file: environment-dev.yml
      - name: Run linter
        run: |
          pre-commit install
          pre-commit run -a
  unit-test:
    name: Unit tests (django)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2.4.0
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v0.8.0
        with:
          create_credentials_file: true
          workload_identity_provider: projects/830784087321/locations/global/workloadIdentityPools/galaxy-ci/providers/github-ci-main
          service_account: github-ci-agent@mitbattlecode.iam.gserviceaccount.com
      - name: Cache conda
        uses: actions/cache@v3.0.11
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment-dev.yml') }}
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          environment-file: environment-dev.yml
      - name: Initialize migrations
        run: ./manage.py makemigrations
        working-directory: ./backend
      - name: Run tests
        run: find * -type f -name "test*.py" | sed "s/\.py$//g" | sed "s/\//./g" | xargs ./manage.py test -v=2
        working-directory: ./backend
