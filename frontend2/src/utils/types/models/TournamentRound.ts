/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReleaseStatusEnum } from './ReleaseStatusEnum';
import {
    ReleaseStatusEnumFromJSON,
    ReleaseStatusEnumFromJSONTyped,
    ReleaseStatusEnumToJSON,
} from './ReleaseStatusEnum';

/**
 * 
 * @export
 * @interface TournamentRound
 */
export interface TournamentRound {
    /**
     * 
     * @type {number}
     * @memberof TournamentRound
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof TournamentRound
     */
    tournament: string;
    /**
     * 
     * @type {number}
     * @memberof TournamentRound
     */
    external_id?: number | null;
    /**
     * 
     * @type {string}
     * @memberof TournamentRound
     */
    name: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof TournamentRound
     */
    maps?: Array<number>;
    /**
     * 
     * @type {ReleaseStatusEnum}
     * @memberof TournamentRound
     */
    release_status?: ReleaseStatusEnum;
}

/**
 * Check if a given object implements the TournamentRound interface.
 */
export function instanceOfTournamentRound(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "tournament" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function TournamentRoundFromJSON(json: any): TournamentRound {
    return TournamentRoundFromJSONTyped(json, false);
}

export function TournamentRoundFromJSONTyped(json: any, ignoreDiscriminator: boolean): TournamentRound {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'tournament': json['tournament'],
        'external_id': !exists(json, 'external_id') ? undefined : json['external_id'],
        'name': json['name'],
        'maps': !exists(json, 'maps') ? undefined : json['maps'],
        'release_status': !exists(json, 'release_status') ? undefined : ReleaseStatusEnumFromJSON(json['release_status']),
    };
}

export function TournamentRoundToJSON(value?: TournamentRound | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tournament': value.tournament,
        'external_id': value.external_id,
        'name': value.name,
        'maps': value.maps,
        'release_status': ReleaseStatusEnumToJSON(value.release_status),
    };
}

